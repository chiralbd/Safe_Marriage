add_overall() %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table4
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table4
df %>%
select(31:41) %>%
tbl_summary(type = all_categorical() ~ "categorical")
table6 <- df %>%
select(31:41) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table6
table5 <- df %>%
select(31:41) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table5
df %>%
select(59:66) %>%
tbl_summary(type = all_categorical() ~ "categorical")
df %>%
select(59:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
# Load packages
library(tidyverse)
library(gtsummary)
library(officer)
library(flextable)
library(readxl)
# read data
data <- read_excel("data/Safe_Marriages_Clean.xlsx")
# Table 1. Demographic characteristics of the participants
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table1
# Filter data
df <- filter(data, `Have you previously heard of thalassemia?` == "Yes")
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table1
# Filter data
df <- filter(data, `Have you previously heard of thalassemia?` == "Yes")
table3 <- df %>%
select(KnowledgeLevel, 5:12) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "KnowledgeLevel") %>%
add_overall() %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table3
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table4
table5 <- df %>%
select(31:41) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table5
df %>%
select(59:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
# Table 7. Factors associated with knowledge
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
names(df)
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
View(df)
# Load packages
library(tidyverse)
library(gtsummary)
library(officer)
library(flextable)
library(readxl)
library(forcats)
# read data
data <- read_excel("data/Safe_Marriages_Clean.xlsx")
# Filter data
df <- filter(data, `Have you previously heard of thalassemia?` == "Yes")
# Table 7. Factors associated with knowledge
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
model <- glm(KnowledgeLevelCoded ~ Age + Gender + `Marital Status` + `Where are you from?`+
`Type of Institute`+ `Year of Study`+ `Year of Study` + `Economic Status`
data = df,
names(df)
model <- glm(KnowledgeLevelCoded ~ Age + Gender + `Marital Status` + `Where are you from?`+
`Type of Institute`+ `Year of Study` + `Economic Status`
data = df,
model <- glm(KnowledgeLevelCoded ~ Age + Gender + `Marital Status` + `Where are you from?`+
`Type of Institute`+`Year of Study` + `Economic Status`,
data = df,
binomial(link = "logit"))
df$KnowledgeLevelCoded
model <- glm(KnowledgeLevelCoded ~ Age + Gender + `Marital Status` + `Where are you from?`+
`Type of Institute`+`Year of Study` + `Economic Status`,
data = df,
binomial(link = "logit"))
# read data
data <- read_excel("data/Safe_Marriages_Clean.xlsx")
# Table 7. Factors associated with knowledge
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
model <- glm(KnowledgeLevelCoded ~ Age + Gender + `Marital Status` + `Where are you from?`+
`Type of Institute`+`Year of Study` + `Economic Status`,
data = df,
binomial(link = "logit"))
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
df %>%
select(KnowledgeLevelCoded, Age, Gender, `Marital Status`, `Where are you from?`,
`Type of Institute`,
`Year of Study`,
`Economic Status`) %>%
tbl_uvregression(
method = glm,
y = KnowledgeLevelCoded,
method.args = list(family = binomial(link = "logit")),
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)
) %>%
bold_p() %>%        # bold p-values under a given threshold (default 0.05)
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
View(df)
rlang::last_trace()
glm(KnowledgeLevelCoded ~ Gender)
glm(KnowledgeLevelCoded ~ Gender, data = df)
model <- glm(KnowledgeLevelCoded ~ Gender, data = df)
summary()
summary(model)
model %>%
tbl_uvregression()
tbl_regression(model,
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)) %>%
bold_p() %>%
bold_labels() %>%
italicize_labels() %>%
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
model <- glm(KnowledgeLevelCoded ~ Gender, data = df, binomial(link = "logit"))
# read data
data <- read_excel("data/Safe_Marriages_Clean.xlsx")
View(data)
# Filter data
df <- filter(data, `Have you previously heard of thalassemia?` == "Yes")
View(df)
# Table 7. Factors associated with knowledge
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
df %>%
select(KnowledgeLevelCoded, Age, Gender, `Marital Status`, `Where are you from?`,
`Type of Institute`,
`Year of Study`,
`Economic Status`) %>%
tbl_uvregression(
method = glm,
y = KnowledgeLevelCoded,
method.args = list(family = binomial(link = "logit")),
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)
) %>%
bold_p() %>%        # bold p-values under a given threshold (default 0.05)
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table1
df %>%
select(59:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
names(df)
# Table 6. Opinion of the respondents regarding pre-marital thalassemia screening
select(df, 57)
df %>%
select(55, 56, 57, 58, 59) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
# Table 6. Opinion of the respondents regarding pre-marital thalassemia screening
table7 <- df %>%
select(55, 56, 57, 58, 59) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table7
# Table 7. Opinion of the respondents regarding safe marriage
table7 <- df %>%
select(60:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table7
table6 <- df %>%
select(55:59) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table6
table7 <- df %>%
select(60:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table7
table7 <- df %>%
select(60:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table7
table8 <- df %>%
select(KnowledgeLevelCoded, Age, Gender, `Marital Status`, `Where are you from?`,
`Type of Institute`,
`Year of Study`,
`Economic Status`) %>%
tbl_uvregression(
method = glm,
y = KnowledgeLevelCoded,
method.args = list(family = binomial(link = "logit")),
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)
) %>%
bold_p() %>%        # bold p-values under a given threshold (default 0.05)
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
table8
# read data
data <- read_excel("data/Safe_Marriages_Clean.xlsx")
# Load packages
library(tidyverse)
library(gtsummary)
library(officer)
library(flextable)
library(readxl)
library(forcats)
# read data
data <- read_excel("data/Safe_Marriages_Clean.xlsx")
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table1
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table() %>%
border()
table1
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table() %>%
border(border.top = fp_border(color = "orange"))
table1
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table() %>%
border(border.top = fp_border())
table1
View(df)
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table1
# Filter data
df <- filter(data, `Have you previously heard of thalassemia?` == "Yes")
table3 <- df %>%
select(KnowledgeLevel, 5:12) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "KnowledgeLevel") %>%
add_overall() %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table3
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table4
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = variable_with_no_pval ~ list(workspace=2e9))%>%
bold_p() %>%
as_flex_table()
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = variable_with_no_pval ~ list(workspace=4e9))%>%
bold_p() %>%
as_fl
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = variable_with_no_pval ~ list(workspace=4e9))%>%
bold_p() %>%
as_flex_table()
rlang::last_trace()
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = all_test("fisher.test") ~ list(workspace=2e9))%>%
bold_p() %>%
as_flex_table()
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p()%>%
bold_p() %>%
as_flex_table()
table4
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = all_test("chisq.test"))%>%
bold_p() %>%
as_flex_table()
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = all_categorical() ~ "chisq.test")%>%
bold_p() %>%
as_flex_table()
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p(test.args = "chisq.test")%>%
bold_p() %>%
as_flex_table()
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p()%>%
bold_p() %>%
as_flex_table()
table4
table5 <- df %>%
select(31:41) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table5
table6 <- df %>%
select(55:59) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table6
table7 <- df %>%
select(60:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table7
table8 <- df %>%
select(KnowledgeLevelCoded, Age, Gender, `Marital Status`, `Where are you from?`,
`Type of Institute`,
`Year of Study`,
`Economic Status`) %>%
tbl_uvregression(
method = glm,
y = KnowledgeLevelCoded,
method.args = list(family = binomial(link = "logit")),
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)
) %>%
bold_p() %>%        # bold p-values under a given threshold (default 0.05)
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
table8
table3 <- df %>%
select(KnowledgeLevel, 5:12) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "KnowledgeLevel") %>%
add_overall() %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table3
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p()%>%
bold_p() %>%
as_flex_table()
table4
install.packages("gtsummary")
install.packages("gtsummary")
library(tidyverse)
library(gtsummary)
# Load packages
library(tidyverse)
library(gtsummary)
library(gt)
library(gtsummary)
install.packages(c("bayestestR", "BiocManager", "blogdown", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "chron", "clock", "countrycode", "crul", "curl", "datawizard", "deldir", "DEoptimR", "dismo", "dplyr", "dslabs", "DT", "duckdb", "ellipse", "emmeans", "epicontacts", "evaluate", "FactoMineR", "fitdistrplus", "flextable", "fontawesome", "fs", "future.apply", "gargle", "gdtools", "ggimage", "ggplot2", "googledrive", "googlesheets4", "graphlayouts", "grates", "hardhat", "Hmisc", "httpuv", "httr", "httr2", "igraph", "incidence2", "insight", "interp", "jsonlite", "knitr", "labelled", "later", "lme4", "locfit", "lwgeom", "maptools", "markdown", "MASS", "Matrix", "matrixStats", "metafor", "multcompView", "mvtnorm", "norm", "officer", "ottrpal", "parallelly", "parameters", "phosphoricons", "pkgmaker", "plotly", "pROC", "processx", "prodlim", "profvis", "ps", "quantmod", "quantreg", "RcppArmadillo", "RCurl", "recipes", "reticulate", "rgdal", "rlang", "rmarkdown", "rnaturalearth", "robustbase", "RSQLite", "s2", "sass", "scattermore", "scatterpie", "scatterplot3d", "servr", "sf", "showtext", "sp", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.utils", "stars", "styler", "survey", "sys", "terra", "testthat", "tinytex", "treemap", "TSP", "tzdb", "ucminf", "units", "usethis", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "wk", "xfun", "xml2", "xts", "zip", "zoo"))
install.packages(c("bayestestR", "BiocManager", "blogdown", "bookdown", "broom", "broom.helpers", "bslib", "cachem", "car", "checkmate", "chron", "clock", "countrycode", "crul", "curl", "datawizard", "deldir", "DEoptimR", "dismo", "dplyr", "dslabs", "DT", "duckdb", "ellipse", "emmeans", "epicontacts", "evaluate", "FactoMineR", "fitdistrplus", "flextable", "fontawesome", "fs", "future.apply", "gargle", "gdtools", "ggimage", "ggplot2", "googledrive", "googlesheets4", "graphlayouts", "grates", "hardhat", "Hmisc", "httpuv", "httr", "httr2", "igraph", "incidence2", "insight", "interp", "jsonlite", "knitr", "labelled", "later", "lme4", "locfit", "lwgeom", "maptools", "markdown", "MASS", "Matrix", "matrixStats", "metafor", "multcompView", "mvtnorm", "norm", "officer", "ottrpal", "parallelly", "parameters", "phosphoricons", "pkgmaker", "plotly", "pROC", "processx", "prodlim", "profvis", "ps", "quantmod", "quantreg", "RcppArmadillo", "RCurl", "recipes", "reticulate", "rgdal", "rlang", "rmarkdown", "rnaturalearth", "robustbase", "RSQLite", "s2", "sass", "scattermore", "scatterpie", "scatterplot3d", "servr", "sf", "showtext", "sp", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.utils", "stars", "styler", "survey", "sys", "terra", "testthat", "tinytex", "treemap", "TSP", "tzdb", "ucminf", "units", "usethis", "V8", "vctrs", "viridis", "viridisLite", "vroom", "waldo", "wk", "xfun", "xml2", "xts", "zip", "zoo"))
# Load packages
library(tidyverse)
library(gtsummary)
library(officer)
library(flextable)
library(readxl)
library(forcats)
table3 <- df %>%
select(KnowledgeLevel, 5:12) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "KnowledgeLevel") %>%
add_overall() %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table3
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p()%>%
bold_p() %>%
as_flex_table()
table4
# Table 1. Demographic characteristics of the participants
table1 <- data %>%
select(5:13) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table1
save_as_docx(table1, path = "tables/Table1.docx")
# Filter data
df <- filter(data, `Have you previously heard of thalassemia?` == "Yes")
# Table 3. Association between demographic variables and level of thalassaemia knowledge
table3 <- df %>%
select(KnowledgeLevel, 5:12) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "KnowledgeLevel") %>%
add_overall() %>%
add_p() %>%
bold_p() %>%
as_flex_table()
table3
save_as_docx(table3, path = "tables/Table3.docx")
table4 <- df %>%
select(`Field of Study`, 19:30) %>%
tbl_summary(type = all_categorical() ~ "categorical",
by = "Field of Study") %>%
add_p()%>%
bold_p() %>%
as_flex_table()
table4
table5 <- df %>%
select(31:41) %>%
tbl_summary(type = all_categorical() ~ "categorical") %>%
as_flex_table()
table5
save_as_docx(table5, path = "tables/Table5.docx")
table6 <- df %>%
select(55:59) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table6
save_as_docx(table6, path = "tables/Table6.docx")
table7 <- df %>%
select(60:66) %>%
tbl_summary(type = all_categorical() ~ "categorical",
missing = "no")
table7
save_as_docx(table7, path = "tables/Table7.docx")
df$KnowledgeLevel <- as.factor(df$KnowledgeLevelCoded)
table8 <- df %>%
select(KnowledgeLevelCoded, Age, Gender, `Marital Status`, `Where are you from?`,
`Type of Institute`,
`Year of Study`,
`Economic Status`) %>%
tbl_uvregression(
method = glm,
y = KnowledgeLevelCoded,
method.args = list(family = binomial(link = "logit")),
exponentiate = TRUE,
pvalue_fun = ~style_pvalue(.x, digits = 2)
) %>%
bold_p() %>%        # bold p-values under a given threshold (default 0.05)
as_flex_table() %>%
set_table_properties(width = 1, layout = "autofit")
table8
save_as_docx(table8, path = "tables/Table8.docx")
